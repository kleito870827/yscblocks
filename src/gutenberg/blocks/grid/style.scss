/**
 * Frontend Styles
 */
@import "../../variables";

// Grid from Bootstrap 4.1
@import "../../bootstrap/functions";
@import "../../bootstrap/variables";
@import "../../bootstrap/grid";
@import "../../bootstrap/breakpoints";

// Row
//
// Rows contain and clear the floats of your columns.
.ysc-grid {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);

  // Columns
  //
  // Common styles for small and large grid columns
  // Common properties for all breakpoints
  > .ysc-col {
    position: relative;
    display: flex;
    // Fix for previous columns implementation without .ysc-col-content
    flex-wrap: wrap;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    padding-right: ($grid-gutter-width / 2);
    padding-left: ($grid-gutter-width / 2);
  }
}
.ysc-col-content {
  width: 100%;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
    .ysc-col#{$infix} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }

    // col size.
    @for $i from 1 through $grid-columns {
      .ysc-col#{$infix}-#{$i} {
        @include make-col($i, $grid-columns);
      }
    }

    // col order.
    .ysc-col-order#{$infix}-first {
      order: -1;
    }

    .ysc-col-order#{$infix}-last {
      order: $grid-columns + 1;
    }

    @for $i from 0 through $grid-columns {
      .ysc-col-order#{$infix}-#{$i} {
        order: $i;
      }
    }
  }
}

// Vertical align.
.ysc-col > .ysc-col-content {
  align-self: flex-start;
}
.ysc-grid-align-items-center > .ysc-col > .ysc-col-content {
  align-self: center;
}
.ysc-grid-align-items-end > .ysc-col > .ysc-col-content {
  align-self: flex-end;
}

// Vertical align column.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .ysc-grid > .ysc-col-align-self#{$infix}-start > .ysc-col-content {
      align-self: flex-start;
    }
    .ysc-grid > .ysc-col.ysc-col-align-self#{$infix}-center > .ysc-col-content {
      align-self: center;
    }
    .ysc-grid > .ysc-col.ysc-col-align-self#{$infix}-end > .ysc-col-content {
      align-self: flex-end;
    }
  }
}

// Horizontal align.
.ysc-grid-justify-content-center {
  justify-content: center;
}
.ysc-grid-justify-content-end {
  justify-content: flex-end;
}
.ysc-grid-justify-content-around {
  justify-content: space-around;
}
.ysc-grid-justify-content-between {
  justify-content: space-between;
}

// Gaps.
@each $name, $size in $grid-gaps {
  .ysc-grid-gap-#{$name} {
    margin-right: ($size / -2);
    margin-left: ($size / -2);

    > .ysc-col {
      padding-right: ($size / 2);
      padding-left: ($size / 2);
    }
  }
}

// AWB backgrounds
.ysc-grid-with-bg,
.ysc-col-with-bg {
  position: relative;
  z-index: 0;

  > .nk-awb {
    &,
    .nk-awb-inner,
    .nk-awb-overlay,
    .nk-awb-wrap {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: -99;
    }
    .nk-awb-wrap {
      overflow: hidden;
    }

    /* Fix for Safari */
    .nk-awb-overlay {
      z-index: 0;
    }

    /* Background sizes */
    .nk-awb-inner {
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: cover;
      z-index: -100;
    }
    [data-awb-image-background-size="contain"] > .nk-awb-inner {
      background-size: contain;
    }
    [data-awb-image-background-size="pattern"] > .nk-awb-inner {
      background-repeat: repeat;
      background-size: auto;
    }

    /* Image sizes*/
    .nk-awb-inner > .jarallax-img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;

      /* support for plugin https://github.com/bfred-it/object-fit-images */
      font-family: "object-fit: cover;"; // stylelint-disable-line
      z-index: -100;
      object-fit: cover;
    }
    [data-awb-image-background-size="contain"] > .nk-awb-inner > .jarallax-img {
      object-fit: contain;

      /* support for plugin https://github.com/bfred-it/object-fit-images */
      font-family: "object-fit: contain;"; // stylelint-disable-line
    }
  }
}
.ysc-grid-with-bg {
  &.ysc-grid-gap-lg > .nk-awb {
    right: 22.5px;
    left: 22.5px;
  }
  &.ysc-grid-gap-md > .nk-awb {
    right: 15px;
    left: 15px;
  }
  &.ysc-grid-gap-sm > .nk-awb {
    right: 7.5px;
    left: 7.5px;
  }

  > .nk-awb.alignfull {
    right: 0;
    left: 0;
  }
}
