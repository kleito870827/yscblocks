/**
 * Editor Styles
 */
@import "../../variables";

// Grid from Bootstrap 4.1
@import "../../bootstrap/functions";
@import "../../bootstrap/variables";
@import "../../bootstrap/grid";
@import "../../bootstrap/breakpoints";

// Styles from core Columns block
// https://github.com/WordPress/gutenberg/blob/master/blocks/library/columns/editor.scss
.ysc-grid {
  position: relative;
  display: block;
  // These margins make sure that nested blocks stack/overlay with the parent block chrome
  // This is sort of an experiment at making sure the editor looks as much like the end result as possible
  // Potentially the rules here can apply to all nested blocks and enable stacking, in which case it should be moved elsewhere
  margin-right: 0;
  margin-left: 0;

  > .editor-inner-blocks > .editor-block-list__layout {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    margin-right: -15px;
    margin-left: -15px;

    // This max-width is used to constrain the main editor column, it should not cascade into columns
    .editor-block-list__block {
      max-width: none;
      margin-right: 0;
      margin-left: 0;
    }
  }

  // Fullwide: show margin left/right to ensure there's room for the side UI
  // This is not a 1:1 preview with the front-end where these margins would presumably be zero
  // @todo this could be revisited, by for example showing this margin only when the parent block was selected first
  // Then at least an unselected columns block would be an accurate preview
  .editor-block-list__block[data-align="full"][data-type="ysc/grid"]
    > .editor-block-list__block-edit
    > div
    > & {
    > .ysc-grid-button-select {
      right: 1px;
    }
    > .editor-inner-blocks > .editor-block-list__layout {
      margin-right: 1px;
      margin-left: 1px;
    }
  }

  // Hide appender shortcuts in columns
  // @todo This essentially duplicates the mobile styles for the appender component
  // It would be nice to be able to use element queries in that component instead https://github.com/tomhodgins/element-queries-spec
  .editor-inserter-with-shortcuts {
    display: none;
  }
  .editor-block-list__empty-block-inserter,
  .editor-default-block-appender .editor-inserter {
    right: $item-spacing;
    left: auto;
  }
}

// Fix columns overflowing.
.ysc-grid > .editor-inner-blocks::before {
  content: "";
  display: block;
  height: 1px;
  margin-bottom: -30px;
}
.wp-block.ysc-col {
  margin-top: 29px;
}

// Highlight the label to easily select grid/column block by clicking on it.
.ysc-grid-button-select,
.ysc-column-button-select {
  position: absolute;
  top: -15px;
  right: -15px;
  padding: 2px 4px;
  font-family: $default-font;
  font-size: 17px;
  line-height: 1;
  color: #fff;
  cursor: pointer;
  visibility: hidden;
  background-color: $light-gray-700;
  border-bottom-left-radius: 3px;
  opacity: 0;
  transition: 0.2s opacity, 0.2s visibility, 0.2s background-color;
  z-index: 21;

  svg {
    width: auto;
    height: 1em;
  }
}
.ysc-grid-button-select {
  top: auto;
  bottom: 100%;
  margin-bottom: 14px;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  border-bottom-left-radius: 0;
}
[data-type="ysc/grid"]:hover
  > .editor-block-list__block-edit
  > div
  > div
  > .ysc-grid-button-select,
[data-type="ysc/grid-column"]:hover
  > .editor-block-list__block-edit
  > div
  > div
  > .ysc-column-button-select {
  visibility: visible;
  opacity: 1;
}
.ysc-grid-button-select:hover,
.ysc-column-button-select:hover {
  background-color: $blue-wordpress;
}

// add outlines on hover
.editor-block-list__layout
  > [data-type="ysc/grid-column"]
  > .editor-block-list__block-edit::before {
  left: -15px;
}
// stylelint-disable-next-line
[data-type="ysc/grid"]:hover
  > .editor-block-list__block-edit
  > div
  > .ysc-grid
  > .editor-inner-blocks
  > .editor-block-list__layout
  > [data-type="ysc/grid-column"]:not(.is-selected)
  > .editor-block-list__block-edit::before,
[data-type="ysc/grid"].is-hovered
  > .editor-block-list__block-edit
  > div
  > .ysc-grid
  > .editor-inner-blocks
  > .editor-block-list__layout
  > [data-type="ysc/grid-column"]:not(.is-selected)
  > .editor-block-list__block-edit::before,
[data-type="ysc/grid"].is-selected
  > .editor-block-list__block-edit
  > div
  > .ysc-grid
  > .editor-inner-blocks
  > .editor-block-list__layout
  > [data-type="ysc/grid-column"]:not(.is-selected)
  > .editor-block-list__block-edit::before {
  outline: 1px dashed rgba(145, 151, 162, 0.25);
}
// stylelint-disable-next-line
[data-type="ysc/grid"]:hover
  > .editor-block-list__block-edit
  > div
  > .ysc-grid
  > .editor-inner-blocks
  > .editor-block-list__layout
  > [data-type="ysc/grid-column"].is-hovered
  > .editor-block-list__block-edit::before {
  outline: 1px solid $blue-wordpress;
}

// fix background overlap outlines
.editor-block-list__layout
  > [data-type="ysc/grid"]
  > .editor-block-list__block-edit::before,
.editor-block-list__layout
  > [data-type="ysc/grid-column"]
  > .editor-block-list__block-edit::before {
  z-index: 1;
}

// hide default grid and column breadcrumb
[data-type="ysc/grid"]
  > .editor-block-list__block-edit
  > .editor-block-list__breadcrumb,
[data-type="ysc/grid-column"]
  > .editor-block-list__block-edit
  > .editor-block-list__breadcrumb {
  display: none;
}

// Layouts selector.
.ysc-select-layout {
  padding: 25px;

  .components-placeholder__fieldset > em {
    margin-bottom: 25px;
  }

  .ysc-grid-layout-preview {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-right: -7px;
    margin-left: -7px;

    .ysc-grid-layout-preview-btn {
      display: flex;
      flex-wrap: wrap;
      width: 85px;
      padding: 0;
      margin-right: 7px;
      margin-bottom: 14px;
      margin-left: 7px;
      overflow: hidden;
      cursor: pointer;
      background: none;
      border: 2px solid rgba($color-brand-3, 0.75);
      border-radius: 4px;
      transition: 0.15s border-color, 0.15s background-color;

      .ysc-col {
        height: 40px;
        border-right: 2px solid rgba($color-brand-3, 0.75);
        transition: 0.15s border-color;

        &:last-of-type {
          border-right: none;
        }
      }

      &:hover,
      &:focus {
        background-color: #fff;
        border-color: $color-brand-3;

        .ysc-col {
          border-color: $color-brand-3;
        }
      }
    }
  }

  // templates button.
  .components-button.is-primary {
    height: 35px;
    padding: 0 15px;
    margin-top: 10px;
    font-size: 14px;
  }
}

.ysc-col {
  display: flex;
  flex: 1;
  flex-direction: column;
  width: 0;

  > .editor-block-list__block-edit {
    display: flex;
    flex-basis: 100%;
    // stylelint-disable-next-line
    margin-top: 0 !important;
    // stylelint-disable-next-line
    margin-bottom: 0 !important;

    > [data-block] {
      flex: 100%;
      margin-top: -14px;
      margin-bottom: -14px;
    }

    // fix selected column block content position.
    > .editor-block-contextual-toolbar + [data-block] {
      margin-left: 30px !important;
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
    .ysc-col#{$infix} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }

    // col size.
    @for $i from 1 through $grid-columns {
      .ysc-col#{$infix}-#{$i} {
        @include make-col($i, $grid-columns);
      }
    }

    // col order.
    .ysc-col-order#{$infix}-first {
      order: -1;
    }
    .ysc-col-order#{$infix}-last {
      order: $grid-columns + 1;
    }

    @for $i from 0 through $grid-columns {
      .ysc-col-order#{$infix}-#{$i} {
        order: $i;
      }
    }
  }
}

// Gaps.
@each $name, $size in $grid-gaps {
  .ysc-grid-gap-#{$name} {
    > .editor-inner-blocks {
      margin-right: 14px + ($size / -2);
      margin-left: 15px + ($size / -2);
    }

    [data-type="ysc/grid-column"]
      > .editor-block-list__block-edit
      > [data-block] {
      margin-right: -14px + ($size / 2);
      margin-left: -15px + ($size / 2);
    }
  }
}

// Vertical align.
.ysc-grid-align-items-center
  > .editor-inner-blocks
  > .editor-block-list__layout
  > .ysc-col
  > .editor-block-list__block-edit
  > [data-block] {
  align-self: center;
}
.ysc-grid-align-items-end
  > .editor-inner-blocks
  > .editor-block-list__layout
  > .ysc-col
  > .editor-block-list__block-edit
  > [data-block] {
  align-self: flex-end;
}

// Vertical align column.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .ysc-grid
      > .editor-inner-blocks
      > .editor-block-list__layout
      > .ysc-col-align-self#{$infix}-start
      > .editor-block-list__block-edit
      > [data-block] {
      align-self: flex-start;
    }
    .ysc-grid
      > .editor-inner-blocks
      > .editor-block-list__layout
      > .ysc-col-align-self#{$infix}-center
      > .editor-block-list__block-edit
      > [data-block] {
      align-self: center;
    }
    .ysc-grid
      > .editor-inner-blocks
      > .editor-block-list__layout
      > .ysc-col-align-self#{$infix}-end
      > .editor-block-list__block-edit
      > [data-block] {
      align-self: flex-end;
    }
  }
}

// Horizontal align.
.ysc-grid-justify-content-center
  > .editor-inner-blocks
  > .editor-block-list__layout {
  justify-content: center;
}
.ysc-grid-justify-content-end
  > .editor-inner-blocks
  > .editor-block-list__layout {
  justify-content: flex-end;
}
.ysc-grid-justify-content-around
  > .editor-inner-blocks
  > .editor-block-list__layout {
  justify-content: space-around;
}
.ysc-grid-justify-content-between
  > .editor-inner-blocks
  > .editor-block-list__layout {
  justify-content: space-between;
}

// Background AWB
.ysc-grid > .awb-gutenberg-preview-block,
.ysc-col > .editor-block-list__block-edit > div > .awb-gutenberg-preview-block {
  position: absolute;
  top: -15px;
  right: -15px;
  bottom: -15px;
  left: -15px;
  pointer-events: none;
  transition: 0.15s border ease-in-out;

  // fix for AWB border style.
  &:empty {
    border: none;
  }

  > .nk-awb-overlay {
    position: absolute;
    top: 0;
    left: 0;
  }

  // fixed for some default themes styles
  .editor-styles-wrapper & > .nk-awb-inner > img,
  .editor-styles-wrapper & > .nk-awb-inner > div,
  .editor-styles-wrapper & > div {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
@media (min-width: 600px) {
  [data-align="full"] > .editor-block-list__block-edit > div > .ysc-grid {
    > .awb-gutenberg-preview-block {
      right: 0;
      left: 0;
    }
  }
}
